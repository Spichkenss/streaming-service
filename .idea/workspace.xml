<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="363c0ae1-d03f-4d25-92e5-ee0d9bf5f53f" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/components/chat/Chat.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/containers/Hoverable.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/pages/Map.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/pages/Profile.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/player/StreamPlayer.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/player/controls/CustomControls.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/player/controls/PlayButton.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/player/controls/VolumeController.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/ui/Loader.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/hooks/useHover.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/map/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.env.example" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/next.config.mjs" beforeDir="false" afterPath="$PROJECT_DIR$/next.config.mjs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/prisma/schema.prisma" beforeDir="false" afterPath="$PROJECT_DIR$/prisma/schema.prisma" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/layout/Layout.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/layout/Layout.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/layout/header/Header.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/layout/header/Header.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/layout/header/tab-menu/TabItem.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/layout/header/tab-menu/TabItem.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/layout/header/tab-menu/TabMenu.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/layout/header/tab-menu/TabMenu.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/layout/sidebar/Sidebar.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/layout/sidebar/Sidebar.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/layout/sidebar/user-item/SidebarUserItem.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/layout/sidebar/user-item/SidebarUserItem.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/env.mjs" beforeDir="false" afterPath="$PROJECT_DIR$/src/env.mjs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/_app.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/_app.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/server/api/root.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/server/api/root.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/server/api/routers/users.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/server/api/routers/users.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/styles/globals.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/styles/globals.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="ProjectId" id="2Pyeb0YMf8qdzSwXaU9xN5CMjZm" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;E:/Projects/Web/streaming-service&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.standard&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.standard&quot;: &quot;&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;yarn&quot;,
    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;E:\\Projects\\Web\\streaming-service\\node_modules\\prettier&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;actions.on.save&quot;,
    &quot;ts.external.directory.path&quot;: &quot;E:\\Projects\\Web\\streaming-service\\node_modules\\typescript\\lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="E:\Projects\Web\streaming-service\src\components\player\controls" />
      <recent name="E:\Projects\Web\streaming-service\src\components\ui" />
      <recent name="E:\Projects\Web\streaming-service\src\components\layout\header\tabs-menu" />
      <recent name="E:\Projects\Web\streaming-service\src\components\layout\header" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="363c0ae1-d03f-4d25-92e5-ee0d9bf5f53f" name="Changes" comment="" />
      <created>1684433815703</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1684433815703</updated>
      <workItem from="1684433823578" duration="4303000" />
      <workItem from="1684441729591" duration="4163000" />
      <workItem from="1684471911657" duration="22343000" />
      <workItem from="1684520494414" duration="12108000" />
      <workItem from="1684572897868" duration="4013000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
    <option name="exactExcludedFiles">
      <list>
        <option value="$PROJECT_DIR$/node_modules/tailwindcss/stubs/tailwind.config.cjs" />
      </list>
    </option>
  </component>
</project>